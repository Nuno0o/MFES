class FrutaFeia
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
	public delegations : seq of Delegation;
	public producers : seq of Producer;
	public consumers : seq of Consumer;
operations
	--Constructor
	public FrutaFeia : () ==> FrutaFeia
	FrutaFeia() == (delegations := [];producers := [];consumers := []; return self;);
	--Client ops
	public newCustomer : Consumer`Name * Basket`MaxWeight ==> Consumer
	newCustomer(N,M) == (
		dcl customer : Consumer := new Consumer(N,M);
		consumers := consumers ^ [customer];
		return customer;
	)
	pre forall c in seq consumers & c.name <> N
	post exists c in seq consumers & c.name = N;
	
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end FrutaFeia