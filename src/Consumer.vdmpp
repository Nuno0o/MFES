class Consumer
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
	private name : seq of char;--Name of the consumer
	private basketsize : Basket`Size;--Interests of the consumer
	private baskets : seq of Basket;--Baskets the consumer has retrieved
operations
	public Consumer: seq of char * Basket`Size ==> Consumer
	Consumer(N,S) == (name := N; basketsize := S;baskets := []; return self);
	
	public getBasketSize: () ==> Basket`Size
	getBasketSize() == (return basketsize);
	
	public getBaskets: () ==> seq of Basket
	getBaskets() == (return baskets);
	
	public addBasket: Basket ==> ()
	addBasket(B) == (baskets := [B]^baskets)
	post hd baskets = B;
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Consumer